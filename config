#
# this file is included by Makefile and contains configuration variables for
# FWLive
#

# repos to be included in the chroot. probably you want "current" or "stable".
# use a come-separated list if you want to list multiple repos. the first one
# takes precedence
TREE = testing

# default language, in an xx_YY form
FWLLLANG = en_US
# this font will be used by the consoles
FWLFONT = lat2-16.psfu.gz

# select FWLive profile, the following ones are available:
# * FULL_GTK - for all gtk && xfce packages installed
# * FULL - for all packages installed
# * KDE - KDE4
# * GNOME - GNOME3
# * XFCE - XFCE4
# * X - minimal graphical environment with fvwm
# * SERVER
# * MIN - comfortable console workstation
# * MUSTHAVE - minimalistic one, base of all profiles
APPSGROUP = FULL

# add supported locals
LOCALE = de,fr,da,hu,cs

# grub title part 1
FWLSREL = FWLive-${APPSGROUP}

# grub title part 2
ifeq ($(findstring current,$(TREE)),current)
FWVER = $(shell date +%Y%m%d)
FWCODENAME = -current
endif
ifeq ($(findstring testing,$(TREE)),testing)
FWVER = 1.6pre1
FWCODENAME = Fermus
endif
FWVER ?= 1.5
FWCODENAME ?= Mores
FWREL = ${FWVER} (${FWCODENAME})

# filename of the is
ISONAME = ${FWLHOST}-${FWVER}-$(shell uname -m)-$(shell echo ${APPSGROUP}|tr [A-Z] [a-z]).iso

# codename of the livecd, used in /etc/issue and /etc/fwlive-release
FWLCODENAME = Tibet

# Vendor name (used in /etc/issue only)
VENDOR = Frugalware

# hostname
FWLHOST = fwlive
# login of the regular live user
FWLUSER = fwlive
# and the password of it
FWUSERPASS = ${FWLUSER}
# password of the root account
FWROOTPASS = fwroot

# configsave will save these directories
SAVEDIRS = etc home lib root usr var

# set this to 'n' if you don't want to include the installer on the livecd
CONFIG_SETUP = y

# additional packages to be installed by the profiles
# no builded pkgs: truecrypt acerhk lirc
DRIVERS = busybox madwifi wlan-ng busybox \
	  ndiswrapper acx100 linux-firmware
INST_MUSTHAVE_APPS = busybox util-linux-ng grub-theme-frugalware \
	sudo squashfs cdrtools ntfs-3g
ifneq ($(ARCH),x86_64)
INST_MUSTHAVE_APPS += memtest86+
endif
ifeq ($(CONFIG_SETUP),y)
INST_MUSTHAVE_APPS += fwsetup
endif
INST_MIN_APPS = ${INST_MUSTHAVE_APPS} ${DRIVERS} openssh mc wget lynx nmap \
	irssi dbus hal wireless_tools vim elinks links bind iputils iptables
INST_SERVER_APPS = ${INST_MIN_APPS} ncftp fuseftp postfix mysql libmysqlclient \
	php php-cgi apache pure-ftpd phpmyadmin samba dhcp dhcpcd lighttpd fcgi
INST_X_APPS = xorg-server xorg-drivers xorg-fonts fvwm mplayer alsa-utils
INST_EXTRA_APPS = gimp geeqie wireshark kaffeine ktorrent
INST_EXTRA_GTK_APPS = gimp wireshark gqview transmission
INST_LOCALE_APPS = firefox-{${LOCALE}} 	kde-l10n-{${LOCALE}} \
	libreoffice-l10n-{${LOCALE}} k3b
INST_LOCALE_GTK_APPS = firefox-{${LOCALE}} libreoffice-l10-{${LOCALE}}
INST_KDE_APPS = ${INST_MIN_APPS} ${INST_X_APPS} kdebase libreoffice-kde firefox kmplayer \
	flashplugin qtparted k3b
INST_GNOME_APPS = ${INST_MIN_APPS} ${INST_X_APPS} gnome libreoffice-gnome firefox gparted \
	flashplugin brasero
INST_XFCE_APPS = ${INST_MIN_APPS} ${INST_X_APPS} xfce4 firefox \
	libreoffice flashplugin mplayer
INST_FULL_APPS = ${INST_MIN_APPS} ${INST_KDE_APPS} ${INST_EXTRA_APPS} ${INST_LOCALE_APPS}
INST_FULL_GTK_APPS = ${INST_XFCE_APPS} ${INST_EXTRA_GTK_APPS} ${INST_LOCALE_GTK_APPS}

# vim: ft=make
