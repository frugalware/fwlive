#!/bin/sh

# (c) 2007 Miklos Vajna <vmiklos@frugalware.org>
# (c) 2006 Krisztian VASAS <iron@frugalware.org>
# parse_cmdline for Frugalware
# distributed under GPL License

TEXTDOMAIN=fwlive
TEXTDOMAINDIR=/usr/share/locale
deflang="@FWLLLANG@"

lang=`grep lang /proc/cmdline|sed 's/.*lang=\([^ ]*\)\( .*\|$\)/\1/'`
if [ -z "$lang" ]; then
	lang=$deflang
fi
fwlcp=$(grep $lang /usr/share/locale/locale.alias|sed 's/.*\.//;q'|tr [A-Z] [a-z])

case $lang in
	en_*)
	keymap=us
	;;
	hu_*)
	keymap=`echo $lang |sed 's/_.*//'`
	;;
	*)
	keymap=`echo $lang |sed 's/_.*//'`
	;;
esac
cat << EOF > /etc/sysconfig/keymap
# /etc/sysconfig/keymap

keymap=$keymap
EOF
cat << EOF > /etc/profile.d/lang.sh
export LANG=$lang
export LC_ALL=\$LANG
export CHARSET=$fwlcp
EOF
chmod +x /etc/profile.d/lang.sh
export LC_ALL=$lang

# generate /etc/issue
gen_issue()
{
printf '[H[J\n'
printf '[1;32m =================================================================================================[0;39m\n'
printf '[1;32m  '
# eg. Welcome to FWLive 1.0 by Frugalware
printf $"Welcome to FWLive %s by %s" "@FWLREL@" "@VENDOR@"
printf '                        \l    [0;39m\n'
printf '[1;32m =================================================================================================[0;39m'
printf '\n\n'
printf ' [1;29m %s[0;29m\n\n  ' $"The system is up and running now."
printf $"Login as '%s', with password '%s' or" "@USERNAME@" "@USERPASS@"
printf '\n    '
printf $"login as 'root', with password '%s', both without quotes, lowercase." "@ROOTPASS@"
printf '\n\n [1;29m %s[0;29m\n\n' $"After login, try the following commands:"
printf '  %s\n' $"mc .... to start Midnight Commander (edit/copy/move/create/delete files)"
printf '  %s \n' $"configsave/configrestore  - or use - service config save/restore ..."
printf '	%s     \n' $"to save and restore all filesystem changes"
printf '  %s\n' $"fileswap .... to create special file for swapping RAM to your harddisk"
printf '  %s\n' $"make_disk .... to install FWLive, use make_disk script on FWLive CD"
printf '  %s\n' $"xstart .... to start KDE with autodetected settings (upon failure vesa driver will be used)"
printf '  %s\n\n' $"setup .... a script for your own settings"
printf '[1;32m  %s [0;39m\n' $"When finished, use 'poweroff' or 'reboot' command and wait until it completes"
printf '[1;32m =================================================================================================[0;39m\n\n'
}

gen_issue > /etc/issue

. /usr/lib/liblinuxlive

# change password
NEWROOTPASS="`cmdline_value passwd`"
if [ "$NEWROOTPASS" = "ask" ]; then
	echo -ne "\nEnter new password for root: "
	read -s NEWROOTPASS
fi

if [ ! "$NEWROOTPASS" = "" ]; then
	echo "root:$NEWROOTPASS" | /usr/sbin/chpasswd
fi

# debug
#if grep debug /proc/cmdline 2>/dev/null >/dev/null; then
#       show_debug_banner
#       /mnt/live/bin/ash || /bin/bash || /bin/sh
#fi

# if autoexec= boot parameter is present, automatically start the command given.
# If you need to execute several commands, separate them using ';'
# If you need to use spaces in your command, use ~ instead
# If you wish to reboot/poweroff after the command's execution is finished,
#  simply use autoexec=yourCommand;poweroff for example.
AUTOCMD=$(cmdline_value "autoexec" | tr "~" " ")
if [ "$AUTOCMD" != "" ]; then
	echo "starting autoexec command:  su --login -c \"$AUTOCMD\""
	su --login -c "$AUTOCMD"
fi
